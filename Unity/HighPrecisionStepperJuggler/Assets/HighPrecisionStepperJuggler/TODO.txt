
TODO:

// time intensive:
[ ] animate camera
    [X] implement feature that allows us to overlay imageData fullscreen over ingame camera output at 50% opacy
        to match ingame camera positioning to real life camera positioning
        [ ] make overlay fade adjustable
    [ ] make both graph view overlay and camera view overlay deactivatable
         1. fade out all graphs via video editing software
         2. real camera footage only of twoStepBouncing ball
         
         !THIS NEEDS TO HAPPEN AUTOMATICALLY!
         3. STOP the drawing of all graphs and video streams in Unity
         
         4. fade over with matching unity rendering (no graphs and camera stream)
         5. move camera (close up arm)
         6. fade over to real camera footage
         7. fade back to unity footage
         7. move camera again (top view)
         8. fade over to real camera footage
         
         This can be done manually
         9. START the drawing of all graphs and video streams in Unity
         10. fade in graph and camera streams in video editing software
         
    [ ] implement smooth camera moves with set positions
    [ ] use F keys to switch camera positions?

// easy:
[ ] try to rebuild 5 time bouncing into strong bounce into balancing with twoStep-bouncing
[ ] make different BallControlStrategyCollections (the main sequence, the top view sequence, the close up sequence)
[ ] add a slowed down data sequence to circleBouncing (after 2 full cycles)
[ ] TwostepBouncingLow needs improvement (it fails after a short time)
    [ ] try tuned down correctionTilt to fix
[ ] get a good routine going
    [ ] come up with new flex
    [ ] tweak graph animations
[ ] bring ball to halt by catching it softly.   
    [ ] this might just work be switching the up-down positions of one of the current Bounce ControlStrategies
[ ] "every bounce will be a bit higher"-bouncing
[ ] zig-zag bouncing (maybe moving towards center)

// vid:
[ ] front view, change to unity graphics, look around, end up in top view, change to realtime video again (top view)
[ ] first half: bouncing patterns and data visualization
[ ] second half: bouncing patterns (again) with close up footage and in game camera changes (top view, motor close up view, + maybe one more view)
[ ] give me ball back dance? while close up view and change to top view to get good sync of video streams between switches



// next iteration TODO:

[ ] add radar style turning radius with fade to ball position visualization

[ ] make it possible to show data of second ball

[ ] 2 ball bouncing
    [ ] implemented code needed for this
    [ ] might be possible with Continuous2StepBouncingLow
    [ ] add ball 2 ball data
    [ ] add ball 2 ball data visualization
    [ ] bounce A -> just correct B -> just correct A -> bounce B -> just correct A -> just correct B -> bounce A?
    
[ ] add hit position heatmap
[ ] freeze datapoint-stream on ball data used by PID?
[ ] maybe hit ball without upwards motion when the ball moves very fast to get it under control faster.

[ ] maybe add a circleness check and discard detected object with a low circleness 
    Not really needed since there's normally not much noise in the video stream. But it'd be a nice to have.
    Just in case. Or for demos where there's a hand showing.

[ ] make radius result of image processing more precise (results differ from center to edge)

[X] check whether or not the tilt is constant when moving up with tilted plate
    [ ] turns out we DO have a problem with the tilt shifting ever so slightly while moving upwards with a tilted plate

[ ] fix runtime error that occurs when no camera is connected.
[ ] Write latex math file

memo:

lower link length: 89
upper link length: 80
upper most link length: 35 + 6.5 + 8 = 49.5 (from plate edge to joint) 
upper most link from joint to motor axis center: 49.5 + 21.023 = 70.523

